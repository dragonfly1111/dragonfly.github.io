"use strict";var t,e,i=require("@leafer-ui/core");!function(t){t.LEFT="left",t.RIGHT="right",t.TOP="top",t.BOTTOM="bottom",t.CENTER_X="centerX",t.CENTER_Y="centerY",t.LEFT_OVERLAP="leftOverlap",t.RIGHT_OVERLAP="rightOverlap",t.TOP_OVERLAP="topOverlap",t.BOTTOM_OVERLAP="bottomOverlap",t.TARGET_CENTER_Y_TOP="targetCenterYTop",t.TARGET_CENTER_Y_BOTTOM="targetCenterYBottom",t.TARGET_CENTER_X_LEFT="targetCenterXLeft",t.TARGET_CENTER_X_RIGHT="targetCenterXRight"}(t||(t={})),function(t){t.LEFT="l2r",t.RIGHT="r2l",t.TOP="t2b",t.BOTTOM="b2t"}(e||(e={}));const s="rgb(255,0,0)";exports.ReferenceLine=class{constructor(t,e,o){this.app=t,this.referenceLeafer=t.addLeafer(),this.gutterOptions={showGutter:!e.hasOwnProperty("showGutter")||e.showGutter,showGutterNum:e.showGutterNum||5,fill:e.fill||s,fontSize:e.fontSize||12,stroke:e.stroke||s,strokeWidth:e.strokeWidth||2,startArrow:e.startArrow||"mark",endArrow:e.endArrow||"mark",gutterAdsorption:e.gutterAdsorption||6,gutterArr:e.gutterArr||[12,32,64,128],showBg:!e.hasOwnProperty("showBg")||e.showBg,bgColor:e.bgColor||"rgba(255,156,156,0.16)"},this.lineOptions={showLine:!o.hasOwnProperty("showLine")||o.showLine,showLineNum:o.showLineNum||5,adsorption:o.adsorption||10,stroke:o.stroke||s,strokeWidth:o.strokeWidth||1},this.pointMap=new Map,this.zoomHandler=this.zoomHandler.bind(this),this.app.tree.on(i.ZoomEvent.ZOOM,this.zoomHandler),this.treeListen(t.tree),this.initCenterMap()}initCenterMap(){this.app.tree.children.forEach((t=>{const e=this.getPoints(t.getBounds("content","page"));this.pointMap.set(t.innerId,e)}))}getPoints(t){return{centerX:t.x+t.width/2,centerY:t.y+t.height/2,x:t.x,y:t.y,x1:t.x+t.width,y1:t.y+t.height}}getXOffset(t){const e=Math.min(...t.map((t=>t.x)));return t[0].x-e}getYOffset(t){const e=Math.min(...t.map((t=>t.y)));return t[0].y-e}getXOffset1(t){return Math.max(...t.map((t=>t.x)))-t[0].x}getYOffset1(t){return Math.max(...t.map((t=>t.y)))-t[0].y}drawLine(e,s,o,n){const r=this.getPoints(n.getBounds("content","page")),a=this.getXOffset(n.getLayoutPoints("content","page")),h=this.getYOffset(n.getLayoutPoints("content","page"));if("row"===e)switch(this.line=new i.Line({x:-1e4,y:s,width:2e4,strokeWidth:this.lineOptions.strokeWidth,stroke:this.lineOptions.stroke}),o){case t.TOP:case t.BOTTOM_OVERLAP:n.y=s+h;break;case t.BOTTOM:case t.TOP_OVERLAP:n.y=s-(r.y1-r.y)+h;break;case t.CENTER_Y:case t.TARGET_CENTER_Y_TOP:case t.TARGET_CENTER_Y_BOTTOM:n.y=s-(r.y1-r.y)/2+h}else switch(this.line=new i.Line({x:s,y:-1e4,width:2e4,rotation:90,strokeWidth:1,stroke:this.lineOptions.stroke}),o){case t.CENTER_X:case t.TARGET_CENTER_X_LEFT:case t.TARGET_CENTER_X_RIGHT:n.x=s-(r.x1-r.x)/2+a;break;case t.LEFT:case t.LEFT_OVERLAP:n.x=s+a;break;case t.RIGHT:case t.RIGHT_OVERLAP:n.x=s-(r.x1-r.x)+a}this.referenceLeafer.add(this.line)}drawArrow(t,s){const o=this.getXOffset(s.getLayoutPoints("content","page")),n=this.getYOffset(s.getLayoutPoints("content","page")),r=this.getXOffset1(s.getLayoutPoints("content","page")),a=this.getYOffset1(s.getLayoutPoints("content","page"));let h,p;if("row"===t.type?(t.position===e.LEFT?s.x=t.x-r:s.x=t.x+t.gutter+o,h=new i.Text({x:t.x+t.gutter/2,y:t.y,fill:this.gutterOptions.fill,fontSize:this.gutterOptions.fontSize,textAlign:"center",text:t.gutter.toString()}),p={width:t.gutter,height:2e4,y:-1e4,x:t.x,fill:this.gutterOptions.bgColor,zIndex:-1}):"vertical"===t.type&&(t.position===e.TOP?s.y=t.y-a:s.y=t.y+t.gutter+n,h=new i.Text({x:t.x+this.gutterOptions.fontSize,y:t.y+t.gutter/2-1.5*this.gutterOptions.fontSize/2,fill:this.gutterOptions.fill,fontSize:this.gutterOptions.fontSize,textAlign:"center",text:t.gutter.toString()}),p={width:2e4,x:-1e4,height:t.gutter,y:t.y,fill:this.gutterOptions.bgColor,zIndex:-1}),h&&this.referenceLeafer.add(h),this.gutterOptions.showBg){const t=new i.Rect(p);this.referenceLeafer.add(t)}}getCloseEle(t,e,i){let s=[];const o=[],n=[];this.pointMap.forEach(((t,s)=>{if(s!==e.innerId){const e=Math.sqrt(Math.pow(t.centerX-i.centerX,2)+Math.pow(t.centerY-i.centerY,2));n.push({point:t,distance:e})}})),n.sort(((t,e)=>t.distance-e.distance));for(let e=0;e<Math.min(t,n.length);e++)o.push(n[e].point);return s=o,console.log("closestPoints"),console.log(s),s}treeListen(t){t.on(i.DragEvent.DRAG,(t=>{this.referenceLeafer.clear(),this.lineOptions.showLine&&this.calcOverlap(t.target),this.gutterOptions.showGutter&&this.calcGutter(t.target)})),t.on(i.DragEvent.END,(()=>{this.referenceLeafer.clear(),this.initCenterMap()}))}calcOverlap(e){const i=this.getPoints(e.getBounds("content","page")),s=[];this.getCloseEle(this.lineOptions.showLineNum,e,i).forEach(((o,n)=>{n!==e.innerId&&(Math.abs(o.x-i.x)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x,position:t.LEFT}),Math.abs(o.x1-i.x1)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x1,position:t.RIGHT}),Math.abs(o.y-i.y)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y,position:t.TOP}),Math.abs(o.y1-i.y1)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y1,position:t.BOTTOM}),Math.abs(o.centerX-i.centerX)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.centerX,position:t.CENTER_X}),Math.abs(o.centerY-i.centerY)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.centerY,position:t.CENTER_Y}),Math.abs(o.x-i.x1)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x,position:t.RIGHT_OVERLAP}),Math.abs(o.x1-i.x)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x1,position:t.LEFT_OVERLAP}),Math.abs(o.y-i.y1)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y,position:t.TOP_OVERLAP}),Math.abs(o.y1-i.y)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y1,position:t.BOTTOM_OVERLAP}),Math.abs(i.centerY-o.y)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y,position:t.TARGET_CENTER_Y_TOP}),Math.abs(i.centerY-o.y1)<=this.lineOptions.adsorption&&s.push({type:"row",value:o.y1,position:t.TARGET_CENTER_Y_BOTTOM}),Math.abs(i.centerX-o.x)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x,position:t.TARGET_CENTER_X_LEFT}),Math.abs(i.centerX-o.x1)<=this.lineOptions.adsorption&&s.push({type:"vertical",value:o.x1,position:t.TARGET_CENTER_X_RIGHT}))})),s.forEach((t=>{this.drawLine(t.type,t.value,t.position,e)}))}calcGutter(t){const i=[],s=this.getPoints(t.getBounds("content","page"));this.getCloseEle(this.gutterOptions.showGutterNum,t,s).forEach(((o,n)=>{n!==t.innerId&&this.gutterOptions.gutterArr.forEach((t=>{Math.abs(o.x-s.x1-t)<=this.gutterOptions.gutterAdsorption&&i.push({gutter:t,position:e.LEFT,type:"row",x:o.x-t,y:s.centerY}),Math.abs(s.x-o.x1-t)<=this.gutterOptions.gutterAdsorption&&i.push({gutter:t,position:e.RIGHT,type:"row",x:o.x1,y:s.centerY}),Math.abs(o.y-s.y1-t)<=this.gutterOptions.gutterAdsorption&&i.push({gutter:t,position:e.TOP,type:"vertical",x:s.centerX,y:o.y-t}),Math.abs(s.y-o.y1-t)<=this.gutterOptions.gutterAdsorption&&i.push({gutter:t,position:e.BOTTOM,type:"vertical",x:s.centerX,y:o.y1})}))})),i.forEach((e=>{this.drawArrow(e,t)}))}zoomHandler(){this.initCenterMap()}changeGutterStatus(t){this.gutterOptions.showGutter=t}changeLineStatus(t){this.lineOptions.showLine=t}};
